/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Vistas;

import Vistas.elemetos.RoundedWhitePanel;
import java.util.Calendar;
import java.util.Date;
import java.text.SimpleDateFormat;
import com.toedter.calendar.JCalendar;
import javax.swing.*;
import java.awt.*;
import Controlador.ctrlFactura;
import Modelo.Factura;

public class frmFacturacion extends RoundedWhitePanel {


    
    public frmFacturacion() {
           super(20, 20);
           
        initComponents();
        
        frmFacturacion vista = this;
        Factura modelo = new Factura();
        ctrlFactura controlador = new ctrlFactura(modelo, vista);

        vista.setVisible(true);
        
        txtFechaFactura.setEditable(false);
        txtFechaVencimiento.setEditable(false);
        
         for (Component component : CalendarioEmision.getComponents()) {
        if (component instanceof JButton) {
            component.setVisible(false);
        }
    }

    // Repite lo mismo para CalendarioVencimiento
    for (Component component : CalendarioVencimiento.getComponents()) {
        if (component instanceof JButton) {
            component.setVisible(false);
        }
    }
    }
    
       



    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtFechaFactura = new javax.swing.JTextField();
        txtFechaVencimiento = new javax.swing.JTextField();
        btnAgregar = new javax.swing.JButton();
        btnActualizar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbFacturas = new javax.swing.JTable();
        CalendarioEmision = new com.toedter.calendar.JCalendar();
        CalendarioVencimiento = new com.toedter.calendar.JCalendar();
        jLabel4 = new javax.swing.JLabel();
        txtCliente = new javax.swing.JTextField();
        btnLimpiar = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel1.setText("Agregar nueva factura:");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setText("Fecha de emision:");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setText("Fecha de vencimiento:");

        btnAgregar.setText("Agregar ");

        btnActualizar.setText("Actualizar ");

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        tbFacturas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tbFacturas);

        CalendarioEmision.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                CalendarioEmisionPropertyChange(evt);
            }
        });

        CalendarioVencimiento.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                CalendarioVencimientoPropertyChange(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel4.setText("Factura para:");

        btnLimpiar.setText("Limpiar");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel4)
                                            .addComponent(jLabel2))
                                        .addGap(33, 33, 33)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtFechaFactura)
                                    .addComponent(txtFechaVencimiento, javax.swing.GroupLayout.DEFAULT_SIZE, 144, Short.MAX_VALUE)
                                    .addComponent(txtCliente))
                                .addGap(34, 34, 34)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(CalendarioVencimiento, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(CalendarioEmision, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(51, 51, 51)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(50, 50, 50)
                                .addComponent(btnActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(49, 49, 49)
                                .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(49, 49, 49)
                                .addComponent(btnLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(181, 181, 181))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(272, 272, 272)
                        .addComponent(jLabel1)))
                .addContainerGap(569, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(121, 121, 121)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(196, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtFechaFactura, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(113, 113, 113)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtFechaVencimiento, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(CalendarioEmision, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(CalendarioVencimiento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(54, 54, 54)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(101, 101, 101))
        );
    }// </editor-fold>//GEN-END:initComponents

    
    
    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnEliminarActionPerformed

    
    private void initCalendarios() {
     Calendar today = Calendar.getInstance();
    Date currentDate = today.getTime();

    // Establecer la fecha de emisión a hoy
    CalendarioEmision.setDate(currentDate);
    CalendarioEmision.setMinSelectableDate(currentDate); // Mínimo hoy

    // Establecer la fecha máxima seleccionable a mañana
    today.add(Calendar.DAY_OF_YEAR, 1); // Agregar un día
    Date tomorrowDate = today.getTime();
    CalendarioEmision.setMaxSelectableDate(tomorrowDate); // Máximo mañana

    // Inicializar el calendario de vencimiento
    today.add(Calendar.DAY_OF_YEAR, 6); // Ir a 7 días después de hoy
    Date fechaVencimiento = today.getTime();

    // Establecer el calendario de vencimiento con restricciones
    CalendarioVencimiento.setMinSelectableDate(fechaVencimiento); // Mínimo 7 días después
    CalendarioVencimiento.setMaxSelectableDate(fechaVencimiento); // Máximo 7 días después
    CalendarioVencimiento.setDate(fechaVencimiento); // Establecer fecha de vencimiento inicial

    // Aplicar restricciones
    restrictCalendar(CalendarioEmision);
    restrictCalendar(CalendarioVencimiento);
}
    
    private Date fechaSeleccionada = null; // Variable para almacenar la fecha seleccionada
    
    private void restrictCalendar(JCalendar calendar) {
    // Listener para el cambio de fecha
       disableMonthYearSelectors(calendar);

    // Listener para el cambio de fecha
    calendar.addPropertyChangeListener("calendar", evt -> {
        fechaSeleccionada = calendar.getDate(); // Guardar la fecha seleccionada
        updateTextFields(); // Actualizar los text fields

        if (calendar == CalendarioEmision) {
            // Restringir el calendario de vencimiento basado en la fecha de emisión
            Calendar cal = Calendar.getInstance();
            cal.setTime(fechaSeleccionada);
            cal.add(Calendar.DAY_OF_YEAR, 7);
            CalendarioVencimiento.setMinSelectableDate(cal.getTime());
            CalendarioVencimiento.setMaxSelectableDate(cal.getTime());
        }
    });
}
    
    
    private void disableMonthYearSelectors(JCalendar calendar) {
    if (calendar != null) {
        // Desactivar el selector de mes
        calendar.getMonthChooser().setEnabled(false);
        // Desactivar el selector de año
        calendar.getYearChooser().setEnabled(false);
        
        // Listener para permitir la selección de días
        calendar.getDayChooser().addPropertyChangeListener("day", evt -> {
            // Mantener la fecha actual al cambiar el día
            calendar.setDate(calendar.getDate());
        });
    }
}
    
    private void updateTextFields() {
    SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
    if (fechaSeleccionada != null) {
        txtFechaFactura.setText(dateFormat.format(fechaSeleccionada));
        // Actualizar txtFechaVencimiento si es necesario
    }
}
    

    
    private void CalendarioEmisionPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_CalendarioEmisionPropertyChange
if ("calendar".equals(evt.getPropertyName())) {
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");

        // Actualizar el campo de texto de la fecha de emisión
        txtFechaFactura.setText(dateFormat.format(CalendarioEmision.getDate()));

        // Calcular la fecha de vencimiento (7 días después)
        Calendar calendar = Calendar.getInstance();
        calendar.setTime(CalendarioEmision.getDate());
        calendar.add(Calendar.DAY_OF_YEAR, 7);
        Date fechaVencimiento = calendar.getTime();

        // Establecer la fecha de vencimiento y restringir las fechas
        CalendarioVencimiento.setMinSelectableDate(fechaVencimiento);
        CalendarioVencimiento.setMaxSelectableDate(fechaVencimiento);
        CalendarioVencimiento.setDate(fechaVencimiento); // Seleccionar automáticamente la fecha de vencimiento

        // Actualizar el campo de texto de la fecha de vencimiento
        txtFechaVencimiento.setText(dateFormat.format(fechaVencimiento));
    }    }//GEN-LAST:event_CalendarioEmisionPropertyChange

        @Override
    public void addNotify() {
        super.addNotify();
        initCalendarios(); // Llama a initCalendarios para establecer las restricciones
    }
    
    private void CalendarioVencimientoPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_CalendarioVencimientoPropertyChange
       if ("calendar".equals(evt.getPropertyName())) {
            SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
            txtFechaVencimiento.setText(dateFormat.format(CalendarioVencimiento.getDate()));
        }
    }//GEN-LAST:event_CalendarioVencimientoPropertyChange


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JCalendar CalendarioEmision;
    public com.toedter.calendar.JCalendar CalendarioVencimiento;
    public javax.swing.JButton btnActualizar;
    public javax.swing.JButton btnAgregar;
    public javax.swing.JButton btnEliminar;
    public javax.swing.JButton btnLimpiar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JTable tbFacturas;
    public javax.swing.JTextField txtCliente;
    public javax.swing.JTextField txtFechaFactura;
    public javax.swing.JTextField txtFechaVencimiento;
    // End of variables declaration//GEN-END:variables
}
